type User{
    id: Int!
    createdAt:Time!
    updatedAt:Time!
    name:String!
    surname:String!
    patronymic:String!
    age:Int!
    gender:String!
    nationality:String!
}


type Query{
    users:[User!]!
    pages(page:Int!,limit:Int!):[User!]
    filters(filter:String!,operator:String!,value:String!):[User!]
    }

input NewUser {
    name:String!
    surname:String!
    patronymic:String
    age:Int
    gender:String
    nationality:String
}

type Mutation {
    createUser(input:NewUser!):User!
    updateUser(UserId:Int!,input:NewUser):User!
    deleteUser(UserId:Int!):Boolean!
}

scalar Time
